{"version":3,"sources":["HomeScreen.js","Chemistry/Chemistry.js","Chemistry/MoleCalc/Question_Bank.js","Chemistry/MoleCalc/MoleCalc.js","Chemistry/Mole/Question_Bank.js","Chemistry/Mole/Mole.js","Chemistry/Stoichiometry/Question_Bank.js","Chemistry/Stoichiometry/Stoichiometry.js","Chemistry/Solution_chemistry/Question_Bank.js","Chemistry/Solution_chemistry/Solution_chemistry.js","Chemistry/Atomic/Atomic.js","Chemistry/Atomic/Question_Bank.js","App.js","index.js"],"names":["HomeScreen","className","to","id","React","Component","Chemistry","Chemical_table","formula","mass","getRandomInt","min","max","Math","floor","random","getRandomChem","chem","length","MoleCalc","props","state","answer_key","answer","question","index","status","create","handleChange","bind","createQuestion","handleClick","check","event","preventDefault","name","target","this","q","alert","setState","prevState","parseFloat","toFixed","value","submit","quest","rand","m","Questions","type","onChange","placeholder","onClick","cols","rows","first_ele","first_ele_mass","first_ele_portion","second_ele","second_ele_mass","second_ele_portion","third_ele","third_ele_mass","third_ele_portion","Mole","steps","show_steps","ans","first_ele_mol","second_ele_mol","third_ele_mol","first_ele_percent","second_ele_percent","third_ele_percent","x_first_ele_mass","x_second_ele_mass","y_first_ele_mass","y_second_ele_mass","rand1","rand2","i","split","map","Stoichiometry","answer_key_excess","answer_excess","product","mole_product","excess","hcl_mass","na2co3_mass","mole_h","mole_n","toString","for","checked","Solution_chemistry","volume","initial_molar","final_molar","molar","ion","first_volume","second_volume","first_molar","second_molar","Atomic","A","B","C","D","E","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"8QAyBeA,E,uKAjBP,OACI,yBAAKC,UAAU,eACX,6BACI,oMAKJ,yBAAKA,UAAU,YACX,gCAAQ,kBAAC,IAAD,CAAMC,GAAI,aAAcC,GAAG,aAA3B,uC,GAdHC,IAAMC,WC2BhBC,G,6KAvBP,OACI,yBAAKL,UAAU,yBACX,yBAAKA,UAAU,WACX,4BAAI,kBAAC,IAAD,CAAMC,GAAI,YAAaC,GAAG,YAA1B,yBAER,yBAAKF,UAAU,WACX,4BAAI,kBAAC,IAAD,CAAMC,GAAI,QAASC,GAAG,QAAtB,YAER,yBAAKF,UAAU,WACX,4BAAI,kBAAC,IAAD,CAAMC,GAAI,iBAAkBC,GAAG,iBAA/B,qBAER,yBAAKF,UAAU,WACX,4BAAI,kBAAC,IAAD,CAAMC,GAAI,sBAAuBC,GAAG,sBAApC,0BAER,yBAAKF,UAAU,WACX,4BAAI,kBAAC,IAAD,CAAMC,GAAI,UAAWC,GAAG,UAAxB,0B,GAlBAC,IAAMC,Y,OCsCxBE,EAAkB,CACpB,CAACC,QAAS,OAAQC,KAAM,MACxB,CAACD,QAAS,MAAOC,KAAM,IACvB,CAACD,QAAS,SAAUC,KAAM,IAC1B,CAACD,QAAS,QAASC,KAAM,IACzB,CAACD,QAAS,OAAQC,KAAM,OACxB,CAACD,QAAS,QAASC,KAAM,SAG7B,SAASC,EAAaC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGxD,SAASK,IACL,IAAIC,EAAOV,EAAgBG,EAAa,EAAGH,EAAeW,OAAS,IAGnE,MAAO,CAFSD,EAAKT,QACLS,EAAKR,M,ICiEVU,E,kDAtHX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVC,MAAO,EACPC,OAAQ,GACRC,OAAQ,GAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBAbE,E,wDAgBPI,GACRA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOnC,UAC1B,GAAa,WAATkC,EACAE,KAAKL,aAEJ,GAAa,gBAATG,EAAuB,CAC5B,IAAMG,EAAI,iBAAmBD,KAAKhB,MAAMC,WACxCiB,MAAMD,OAEQ,SAATH,EACLE,KAAKG,UAAS,SAAAC,GACV,MAAO,CACHhB,MAAOgB,EAAUhB,MAAQ,EACzBC,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,OAKhBc,KAAKG,SAAS,CACVd,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,O,8BAMXmB,WAAWL,KAAKhB,MAAME,QAASoB,QAAQ,KAAON,KAAKhB,MAAMC,WAChC,YAAtBe,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,UAAWC,OAAQ,IAIpB,cAAtBU,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,YAAaC,OAAQ,M,mCAK3CM,GACT,IAAMW,EAAQX,EAAMG,OAAOQ,MAC3BP,KAAKG,SAAS,CACVjB,OAAQqB,EACRC,OAAQ,M,uCAKZ,GAA0B,IAAtBR,KAAKhB,MAAMM,OAAa,CACxB,IAAMmB,EDvEU,SAACrB,GACzB,GAAIA,EAHS,IAGU,EAAE,CACrB,IAAMsB,EAAOrC,EAAa,GAAI,KAC1BO,EAAOD,IACLgC,GAAKD,EAAO9B,EAAK,IAAI0B,QAAQ,GAEnC,MAAO,CADA,gCAA4BI,EAA5B,qBAA6C9B,EAAK,GAAlD,KACI+B,GAEV,GAAIvB,EAVI,IAUe,EAAE,CAC1B,IAAMsB,GAAQrC,EAAa,EAAG,KAAS,KAAMiC,QAAQ,GACjD1B,EAAOD,IAEX,MAAO,CADA,gCAA4B+B,EAA5B,qBAA6C9B,EAAK,GAAlD,MACK8B,EAAO9B,EAAK,IAAI0B,QAAQ,IAEnC,GAAIlB,EAhBI,IAgBe,EAAE,CAC1B,IAAMsB,GAAQrC,EAAa,EAAG,KAAM,IAAIiC,QAAQ,GAC5C1B,EAAOD,IAEX,MAAO,CADA,oCAAgC+B,EAAhC,qBAAiD9B,EAAK,GAAtD,0FACY,KAAP8B,GAAaJ,QAAQ,IAEhC,GAAIlB,EAtBI,IAsBe,EAAE,CAC1B,IAAMsB,GAAQrC,EAAa,EAAG,KAAK,IAAIiC,QAAQ,GAC3C1B,EAAOD,IAEX,MAAO,CADA,gCAA4B+B,EAA5B,iCAAyD9B,EAAK,GAA9D,MACK8B,EAAO,MAAMJ,QAAQ,IAEhC,GAAIlB,EA5BI,IA4Be,EAAE,CAC1B,IAAMsB,GAAQrC,EAAa,EAAG,KAAM,IAAIiC,QAAQ,GAC5C1B,EAAOD,IAEX,MAAO,CADA,oCAAgC+B,EAAhC,qBAAiD9B,EAAK,GAAtD,0FACK8B,EAAO9B,EAAK,GAAK,MAAM0B,QAAQ,IAG3C,IAAMI,GAAQrC,EAAa,EAAG,KAAK,IAAIiC,QAAQ,GAC3C1B,EAAOD,IAEX,MAAO,CADA,gCAA4B+B,EAA5B,iCAAyD9B,EAAK,GAA9D,MACK8B,EAAO,KAAO9B,EAAK,IAAI0B,QAAQ,ICmCzBM,CAAuBZ,KAAKhB,MAAMI,OAE5CY,KAAKhB,MAAMC,aAAewB,EAAM,GAChCT,KAAKG,SAAS,CACVlB,WAAawB,EAAM,GACnBtB,SAAUsB,EAAM,GAChBnB,OAAQ,IAIZU,KAAKG,SAAS,CAACb,OAAQ,O,+BAO/B,OADAU,KAAKP,iBAED,yBAAK7B,UAAU,YAEX,gDAAsBoC,KAAKhB,MAAMI,MAAM,EAAI,GAE3C,6BACKY,KAAKhB,MAAMG,UAGhB,6BAEA,2BAAO0B,KAAK,OAAOC,SAAUd,KAAKT,aAAcwB,YAAY,SAASR,MAAOP,KAAKhB,MAAME,SAEvF,6BAZJ,IAYW,6BAEP,4BAAQtB,UAAU,SAASoD,QAAShB,KAAKN,aAAzC,UACA,4BAAQ9B,UAAU,OAAOoD,QAAShB,KAAKN,aAAvC,iBACA,4BAAQ9B,UAAU,UAAUoD,QAAShB,KAAKN,aAA1C,6BACA,4BAAQ9B,UAAU,cAAcoD,QAAShB,KAAKN,aAA9C,eACA,6BACA,6BAEA,4BAAKM,KAAKhB,MAAMK,QAChB,6BACA,yGACA,8BAAU0B,YAAY,6BAA6BE,KAAK,KAAKC,KAAK,OAClE,kC,GAjHOnD,IAAMC,WC8FvBE,EAAkB,CACpB,CAACC,QAAS,QAASC,KAAM,MAAO+C,UAAW,YAAaC,eAAgB,KAAMC,kBAAmB,EAAGC,WAAY,SAAUC,gBAAiB,GAAIC,mBAAoB,GACnK,CAACrD,QAAS,QAASC,KAAM,MAAO+C,UAAW,YAAaC,eAAgB,KAAMC,kBAAmB,EAAGC,WAAY,SAAUC,gBAAiB,GAAIC,mBAAoB,GACnK,CAACrD,QAAS,OAAQC,KAAM,KAAM+C,UAAW,UAAWC,eAAgB,KAAMC,kBAAmB,EAAGC,WAAY,SAAUC,gBAAiB,GAAIC,mBAAoB,GAC/J,CAACrD,QAAS,MAAOC,KAAM,GAAM+C,UAAW,WAAYC,eAAgB,GAAIC,kBAAmB,EAAGC,WAAY,WAAYC,gBAAiB,EAAGC,mBAAoB,GAC9J,CAACrD,QAAS,QAASC,KAAM,MAAO+C,UAAW,YAAaC,eAAgB,GAAIC,kBAAmB,EAAGC,WAAY,SAAUC,gBAAiB,GAAIC,mBAAoB,EAAGC,UAAW,SAAUC,eAAgB,GAAIC,kBAAmB,IAGpO,SAAStD,EAAaC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGxD,SAASK,IACL,OAAOT,EAAgBG,EAAa,EAAGH,EAAeW,OAAS,I,ICsBpD+C,E,kDA/HX,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVC,MAAO,EACPC,OAAQ,GACRC,OAAQ,EACRuC,MAAO,GACPC,WAAY,GAEhB,EAAKvC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBAfE,E,wDAkBPI,GACRA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOnC,UACb,WAATkC,EACAE,KAAKL,QAES,gBAATG,EACLE,KAAKG,SAAS,CACV2B,WAAY,IAGF,SAAThC,EACLE,KAAKG,UAAS,SAAAC,GACV,MAAO,CACHhB,MAAOgB,EAAUhB,MAAQ,EACzBC,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,GACR4C,WAAY,MAKpB9B,KAAKG,SAAS,CACVd,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,GACR4C,WAAY,M,8BAMhB9B,KAAKhB,MAAME,SAAWc,KAAKhB,MAAMC,WACP,YAAtBe,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,UAAWC,OAAQ,IAIpB,cAAtBU,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,YAAaC,OAAQ,M,mCAK3CM,GACT,IAAMW,EAAQX,EAAMG,OAAOQ,MAC3BP,KAAKG,SAAS,CACVjB,OAAQqB,EACRC,OAAQ,M,uCAKZ,GAA0B,IAAtBR,KAAKhB,MAAMM,OAAa,CACxB,IAAMmB,ED5EU,SAACrB,GACzB,IAAI2C,EACJ,GAAI3C,EAJS,IAIU,EAAE,CACrB,IAMIa,EANES,EAAQrC,EAAa,IAAK,KAAO,IACnCO,EAAOD,IACPyC,GAAkBV,EAAO9B,EAAKwC,eAAiBxC,EAAKyC,mBAAmBf,QAAQ,GAC/EiB,GAAmBb,EAAO9B,EAAK2C,gBAAkB3C,EAAK4C,oBAAoBlB,QAAQ,GAClF0B,GAAiBZ,EAAiBxC,EAAKwC,gBAAgBd,QAAQ,GAC/D2B,GAAkBV,EAAkB3C,EAAK2C,iBAAiBjB,QAAQ,GAEtE,GAAI,cAAe1B,EAAK,CACpB,IAAI8C,GAAkBhB,EAAO9B,EAAK8C,eAAiB9C,EAAK+C,mBAAmBrB,QAAQ,GAC/E4B,GAAiBR,EAAiB9C,EAAK8C,gBAAgBpB,QAAQ,GACnEL,EAAC,kDAA8CmB,EAA9C,gBAAoExC,EAAKuC,UAAzE,aAAuFI,EAAvF,gBAA8G3C,EAAK0C,WAAnH,gBAAqII,EAArI,gBAA2J9C,EAAK6C,UAAhK,2GACDM,EAAG,kBAAcnD,EAAKuC,UAAnB,4BAAgDC,EAAhD,wBAA8ExC,EAAKwC,eAAnF,gBAAyGY,EAAzG,oCACOpD,EAAK0C,WADZ,4BAC0CC,EAD1C,wBACyE3C,EAAK2C,gBAD9E,gBACqGU,EADrG,oCAEOrD,EAAK6C,UAFZ,4BAEyCC,EAFzC,wBAEuE9C,EAAK8C,eAF5E,gBAEkGQ,EAFlG,uGAKDF,EALC,cAKkBC,EALlB,cAKsCC,EALtC,cAKyDtD,EAAKyC,kBAL9D,cAKqFzC,EAAK4C,mBAL1F,cAKkH5C,EAAK+C,kBALvH,oEAOuB/C,EAAKT,QAP5B,UAUH4D,EAAG,kBAAcnD,EAAKuC,UAAnB,4BAAgDC,EAAhD,wBAA8ExC,EAAKwC,eAAnF,gBAAyGY,EAAzG,oCACOpD,EAAK0C,WADZ,4BAC0CC,EAD1C,wBACyE3C,EAAK2C,gBAD9E,gBACqGU,EADrG,sGAIDD,EAJC,cAIkBC,EAJlB,cAIsCrD,EAAKyC,kBAJ3C,cAIkEzC,EAAK4C,mBAJvE,mEAMuB5C,EAAKT,QAN5B,KAOH8B,EAAC,kDAA8CmB,EAA9C,gBAAoExC,EAAKuC,UAAzE,gBAA0FI,EAA1F,gBAAiH3C,EAAK0C,WAAtH,2GAEL,MAAO,CAACrB,EAAGrB,EAAKT,QAAS4D,GAExB,GAAI3C,EArCI,IAqCe,EAAE,CAC1B,IAKIa,EALArB,EAAOD,IACPwD,GAAuBvD,EAAKwC,eAAiBxC,EAAKyC,kBAAqBzC,EAAKR,KAAM,KAAKkC,QAAQ,GAC/Fc,GAAkBxC,EAAKwC,eAAiBxC,EAAKyC,mBAAmBf,QAAQ,GACxE8B,GAAwBxD,EAAK2C,gBAAkB3C,EAAK4C,mBAAsB5C,EAAKR,KAAM,KAAKkC,QAAQ,GAClGiB,GAAmB3C,EAAK2C,gBAAkB3C,EAAK4C,oBAAoBlB,QAAQ,GAE/E,GAAI,cAAe1B,EAAK,CACpB,IAAIyD,GAAuBzD,EAAK8C,eAAiB9C,EAAK+C,kBAAqB/C,EAAKR,KAAM,KAAKkC,QAAQ,GAC/FoB,GAAkB9C,EAAK8C,eAAiB9C,EAAK+C,mBAAmBrB,QAAQ,GAC5EL,EAAC,wCAAoCrB,EAAKR,KAAzC,iBAAsD+D,EAAtD,8BAA6FvD,EAAKuC,UAAlG,aAAgHiB,EAAhH,8BAAwJxD,EAAK0C,WAA7J,gBAA+Ke,EAA/K,8BAAsNzD,EAAK6C,UAA3N,0FACDM,EAAG,kBAAcnD,EAAKuC,UAAnB,aAAiCvC,EAAKR,KAAtC,eAAiD+D,EAAjD,eAAyEf,EAAzE,oCACOxC,EAAK0C,WADZ,aAC2B1C,EAAKR,KADhC,eAC2CgE,EAD3C,eACoEb,EADpE,oCAEO3C,EAAK6C,UAFZ,aAE0B7C,EAAKR,KAF/B,eAE0CiE,EAF1C,eAEkEX,EAFlE,oCAGO9C,EAAKuC,UAHZ,aAG0BC,EAH1B,wBAGwDxC,EAAKwC,eAH7D,gBAGmFxC,EAAKyC,kBAHxF,wCAIOzC,EAAK0C,WAJZ,aAI2BC,EAJ3B,wBAI0D3C,EAAK2C,gBAJ/D,gBAIsF3C,EAAK4C,mBAJ3F,wCAKO5C,EAAK6C,UALZ,aAK0BC,EAL1B,wBAKwD9C,EAAK8C,eAL7D,gBAKmF9C,EAAK+C,kBALxF,gEAM+B/C,EAAKT,cAGvC4D,EAAG,kBAAcnD,EAAKuC,UAAnB,aAAiCvC,EAAKR,KAAtC,eAAiD+D,EAAjD,eAAyEf,EAAzE,oCACOxC,EAAK0C,WADZ,aAC2B1C,EAAKR,KADhC,eAC2CgE,EAD3C,eACoEb,EADpE,oCAEO3C,EAAKuC,UAFZ,aAE0BC,EAF1B,wBAEwDxC,EAAKwC,eAF7D,gBAEmFxC,EAAKyC,kBAFxF,wCAGOzC,EAAK0C,WAHZ,aAG2BC,EAH3B,wBAG0D3C,EAAK2C,gBAH/D,gBAGsF3C,EAAK4C,mBAH3F,gEAI+B5C,EAAKT,SACvC8B,EAAC,wCAAoCrB,EAAKR,KAAzC,iBAAsD+D,EAAtD,8BAA6FvD,EAAKuC,UAAlG,gBAAmHiB,EAAnH,8BAA2JxD,EAAK0C,WAAhK,0FAEL,MAAO,CAACrB,EAAGrB,EAAKT,QAAS4D,GAGzB,IAGIO,EAAkBC,EAAmBC,EAAkBC,EAHrDvD,EAASb,EAAa,EAAG,GACzBqE,EAASrE,EAAa,IAAK,KAAO,IAClCsE,EAAStE,EAAa,IAAK,KAAO,IAExC,GAAe,IAAXa,EACAoD,GAAoBI,EAAQxE,EAAe,GAAGkD,gBAAgBd,QAAQ,GACtEiC,GAAqBG,EAAQxE,EAAe,GAAGqD,iBAAiBjB,QAAQ,GACxEkC,GAAoBG,EAAQzE,EAAe,GAAGkD,gBAAgBd,QAAQ,GACtEmC,GAAqBE,EAAQzE,EAAe,GAAGqD,iBAAiBjB,QAAQ,GACxEyB,EAAG,uIACuB7D,EAAe,GAAGC,QADzC,sDAEwBD,EAAe,GAAGC,QAF1C,oEAKH,CACA,IAAIyE,EAAIvE,EAAa,EAAG,GACxBiE,GAAoBI,EAAQxE,EAAe0E,GAAGxB,gBAAgBd,QAAQ,GACtEiC,GAAqBG,EAAQxE,EAAe0E,GAAGrB,iBAAiBjB,QAAQ,GACxEkC,GAAoBG,EAAQzE,EAAe0E,GAAGxB,gBAAgBd,QAAQ,GACtEmC,GAAqBE,EAAQzE,EAAe0E,GAAGrB,iBAAiBjB,QAAQ,GACxEyB,EAAG,uIACuB7D,EAAe0E,GAAGzE,QADzC,sDAEwBD,EAAe0E,GAAGzE,QAF1C,4DAMP,MAAO,CADA,iDAA6CmE,EAA7C,2BAAgFC,EAAhF,+DAAwJC,EAAxJ,8BAA8LC,EAA9L,uGACe,IAAXvD,EAAc,IAAM,IAAK6C,GCflBnB,CAAuBZ,KAAKhB,MAAMI,OAE5CY,KAAKhB,MAAMC,aAAewB,EAAM,GAChCT,KAAKG,SAAS,CACVlB,WAAawB,EAAM,GACnBtB,SAAUsB,EAAM,GAChBnB,OAAQ,EACRuC,MAAOpB,EAAM,KAIjBT,KAAKG,SAAS,CAACb,OAAQ,O,+BAO/B,OADAU,KAAKP,iBAED,yBAAK7B,UAAU,YAEX,gDAAsBoC,KAAKhB,MAAMI,MAAM,EAAI,GAE3C,6BACKY,KAAKhB,MAAMG,UAGhB,6BAEA,2BAAO0B,KAAK,OAAOC,SAAUd,KAAKT,aAAcwB,YAAY,SAASR,MAAOP,KAAKhB,MAAME,SAEvF,6BAZJ,IAYW,6BAEP,4BAAQtB,UAAU,SAASoD,QAAShB,KAAKN,aAAzC,UACA,4BAAQ9B,UAAU,OAAOoD,QAAShB,KAAKN,aAAvC,iBACA,4BAAQ9B,UAAU,UAAUoD,QAAShB,KAAKN,aAA1C,6BACA,4BAAQ9B,UAAU,cAAcoD,QAAShB,KAAKN,aAA9C,eACA,6BACA,6BAEA,4BAAKM,KAAKhB,MAAMK,QAChB,6BACA,yGACA,8BAAU0B,YAAY,6BAA6BE,KAAK,KAAKC,KAAK,OAClE,6BAC2B,IAA1BlB,KAAKhB,MAAM8C,WAAkB,KAAO9B,KAAKhB,MAAM6C,MAAMgB,MAAM,MAAMC,KAAI,SAAAF,GAC9D,OAAO,2BAAIA,W,GAzHhB7E,IAAMC,WCuCzB,SAASK,EAAaC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,G,IC8IzCyE,E,kDApLX,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVC,MAAO,EACPC,OAAQ,GACRC,OAAQ,EACRuC,MAAO,GACPC,WAAY,EACZkB,kBAAmB,GACnBC,cAAe,IAEnB,EAAK1D,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBAjBE,E,wDAoBPI,GACRA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOnC,UACb,WAATkC,EACAE,KAAKL,QAES,gBAATG,EACLE,KAAKG,SAAS,CACV2B,WAAY,IAGF,SAAThC,EACLE,KAAKG,UAAS,SAAAC,GACV,MAAO,CACHhB,MAAOgB,EAAUhB,MAAQ,EACzBC,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,GACR4C,WAAY,EACZkB,kBAAmB,GACnBC,cAAe,OAKvBjD,KAAKG,SAAS,CACVd,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,GACR4C,WAAY,EACZkB,kBAAmB,GACnBC,cAAe,O,8BAMnBjD,KAAKhB,MAAMI,MAAM,IAAM,EAClBiB,WAAWL,KAAKhB,MAAME,QAASoB,QAAQ,KAAON,KAAKhB,MAAMC,WAChC,YAAtBe,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,UAAWC,OAAQ,IAIpB,cAAtBU,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,YAAaC,OAAQ,IAK/Ce,WAAWL,KAAKhB,MAAME,QAASoB,QAAQ,KAAON,KAAKhB,MAAMC,YAAce,KAAKhB,MAAMiE,gBAAkBjD,KAAKhB,MAAMgE,kBACtF,YAAtBhD,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,UAAWC,OAAQ,IAIpB,cAAtBU,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,YAAaC,OAAQ,M,mCAM/CM,GACT,IAAMW,EAAQX,EAAMG,OAAOQ,MACD,WAAtBX,EAAMG,OAAOD,KACbE,KAAKG,SAAS,CACV8C,cAAe1C,EACfC,OAAQ,IAIZR,KAAKG,SAAS,CACVjB,OAAQqB,EACRC,OAAQ,M,uCAMhB,GAA0B,IAAtBR,KAAKhB,MAAMM,OAAa,CACxB,IAAMmB,EDxGU,SAACrB,GACzB,GAAIA,EAHS,IAGU,EAAE,CACrB,IAAIhB,EAAQC,EAAa,IAAM,KAAQ,IACnC6E,EAAkC,IAAvB7E,EAAa,EAAG,GAAU,MAAQ,MAC7C0D,GAAQ3D,GAAoB,QAAZ8E,EAAmB,MAAW,MAAQ,GAAM,OAAO5C,QAAQ,GAC3E6C,GAAgB/E,GAAoB,QAAZ8E,EAAmB,KAAO,QAAS5C,QAAQ,GAKvE,MAAO,CAJF,mGAA+FlC,EAA/F,gBAA2G8E,EAA3G,0HAIMnB,EAAK,GAFP,kBAAcmB,EAAd,cAA2B9E,EAA3B,uBAA0D,QAAZ8E,EAAmB,KAAO,MAAxE,gBAAsFC,EAAtF,yDACsBA,EADtB,eACyCD,EADzC,6BACiF,QAAZA,EAAmB,YAAc,YADtG,kCAC2InB,EAD3I,MAKT,IAIIA,EACAqB,EALEC,EAAYhF,EAAa,IAAK,KAAM,IACpCiF,EAAejF,EAAa,IAAK,KAAM,IACzCkF,EAAUF,EAAW,KAAO,EAC5BG,EAAUF,EAAc,IAoB5B,OAjBIC,EAASC,GACTJ,EAAS,MACTrB,GAA4B,MAAnBwB,EAASC,GAAiB,GAAGlD,QAAQ,GAAImD,aAGlDL,EAAS,SACTrB,GAA4B,KAAnByB,EAASD,IAAejD,QAAQ,GAAImD,YAW1C,CATA,+EAA2EJ,EAA3E,kDACIC,EADJ,sFASIvB,EAAKqB,EAPP,uBAAmBC,EAAnB,kCAA4D,EAAPE,GAAUjD,QAAQ,GAAvE,gDACagD,EADb,gCACgDE,EAAOlD,QAAQ,GAD/D,4PAIK,EAAPiD,GAAUjD,QAAQ,GAJhB,kBAI4BiD,EAAOjD,QAAQ,GAJ3C,4CAKYiD,EAAOjD,QAAQ,GAL3B,8BAKmDkD,EAAOlD,QAAQ,GALlE,kCAK8F8C,EAL9F,uDAMKA,EANL,cAM4B,QAAXA,EAAA,WAAsBG,EAAOjD,QAAQ,GAArC,kBAAiDkD,EAAOlD,QAAQ,GAAhE,qCAAiGkD,EAAOlD,QAAQ,GAAhH,kBAA4HiD,EAAOjD,QAAQ,GAA3I,qBANjB,cAMuLyB,EANvL,MC2ESnB,CAAuBZ,KAAKhB,MAAMI,OAE5CY,KAAKhB,MAAMC,aAAewB,EAAM,GAChCT,KAAKG,SAAS,CACVlB,WAAawB,EAAM,GACnBtB,SAAUsB,EAAM,GAChBnB,OAAQ,EACR0D,kBAAmBvC,EAAM,GACzBoB,MAAOpB,EAAM,KAIjBT,KAAKG,SAAS,CAACb,OAAQ,O,+BAO/B,OADAU,KAAKP,iBAED,yBAAK7B,UAAU,YAEX,gDAAsBoC,KAAKhB,MAAMI,MAAM,EAAI,GAE3C,6BACKY,KAAKhB,MAAMG,UAGhB,6BAECa,KAAKhB,MAAMI,MAAM,IAAM,EAAG,KAAO,6BAE9B,gEAEA,2BAAOsE,IAAI,aACX,2BAAO7C,KAAK,QAAQf,KAAK,SAASS,MAAM,MAAMzC,GAAG,YAAYkD,QAAShB,KAAKT,aAAcoE,QAAsC,QAA7B3D,KAAKhB,MAAMiE,gBAD7G,OAGA,6BAEA,yBAAKnF,GAAG,YACJ,2BAAO4F,IAAI,aACX,2BAAO7C,KAAK,QAAQf,KAAK,SAASS,MAAM,SAASzC,GAAG,YAAYkD,QAAShB,KAAKT,aAAcoE,QAAsC,WAA7B3D,KAAKhB,MAAMiE,gBADhH,WAIJ,6BAEA,6FAKJ,2BAAOpC,KAAK,OAAOC,SAAUd,KAAKT,aAAcwB,YAAY,SAASR,MAAOP,KAAKhB,MAAME,SAEvF,6BAjCJ,IAiCW,6BAEP,4BAAQtB,UAAU,SAASoD,QAAShB,KAAKN,aAAzC,UACA,4BAAQ9B,UAAU,OAAOoD,QAAShB,KAAKN,aAAvC,iBACA,4BAAQ9B,UAAU,UAAUoD,QAAShB,KAAKN,aAA1C,6BACA,4BAAQ9B,UAAU,cAAcoD,QAAShB,KAAKN,aAA9C,eACA,6BACA,6BAEA,4BAAKM,KAAKhB,MAAMK,QAEhB,6BA5CJ,IA8CI,yGACA,8BAAU0B,YAAY,6BAA6BE,KAAK,KAAKC,KAAK,OAClE,6BAE2B,IAA1BlB,KAAKhB,MAAM8C,WAAkB,KAAO9B,KAAKhB,MAAM6C,MAAMgB,MAAM,MAAMC,KAAI,SAAAF,GAC9D,OAAO,2BAAIA,W,GA9KP7E,IAAMC,WC2C5BE,EAAkB,CACpB,CAACC,QAAS,QAASC,KAAM,OACzB,CAACD,QAAS,QAASC,KAAM,OACzB,CAACD,QAAS,OAAQC,KAAM,OACxB,CAACD,QAAS,QAASC,KAAM,SAG7B,SAASO,IACL,OAAOT,EAAgBG,EAAa,EAAGH,EAAeW,OAAS,IAGnE,SAASR,EAAaC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,G,IC+EzCsF,E,kDApIX,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVC,MAAO,EACPC,OAAQ,GACRC,OAAQ,GAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBAbE,E,wDAgBPI,GACRA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOnC,UAC1B,GAAa,WAATkC,EACAE,KAAKL,aAEJ,GAAa,gBAATG,EAAuB,CAC5B,IAAMG,EAAI,iBAAmBD,KAAKhB,MAAMC,WACxCiB,MAAMD,OAEQ,SAATH,EACLE,KAAKG,UAAS,SAAAC,GACV,MAAO,CACHhB,MAAOgB,EAAUhB,MAAQ,EACzBC,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,OAKhBc,KAAKG,SAAS,CACVd,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,O,8BAMZc,KAAKhB,MAAMI,MAAM,IAAM,GAAKY,KAAKhB,MAAMI,MAAM,IAAM,EAC9CiB,WAAWL,KAAKhB,MAAME,QAASoB,QAAQ,KAAON,KAAKhB,MAAMC,WAChC,YAAtBe,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,UAAWC,OAAQ,IAIpB,cAAtBU,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,YAAaC,OAAQ,IAK/Ce,WAAWL,KAAKhB,MAAME,QAASoB,QAAQ,KAAON,KAAKhB,MAAMC,WAChC,YAAtBe,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,UAAWC,OAAQ,IAIpB,cAAtBU,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,YAAaC,OAAQ,M,mCAM/CM,GACT,IAAMW,EAAQX,EAAMG,OAAOQ,MAC3BP,KAAKG,SAAS,CACVjB,OAAQqB,EACRC,OAAQ,M,uCAKZ,GAA0B,IAAtBR,KAAKhB,MAAMM,OAAa,CACxB,IAAMmB,EDrFU,SAACrB,GACzB,GAAIA,EAHS,IAGU,EAAE,CACrB,IAAIR,EAAOD,IACPkF,EAAgC,GAAvBxF,EAAa,GAAI,IAC1ByF,EAAgBzF,EAAa,EAAG,GAAGiC,QAAQ,GAC3CyD,GAAe1F,EAAa,GAAI,IAAI,IAAIiC,QAAQ,GAEpD,MAAO,CADF,yDAAqDuD,EAArD,kBAAqEC,EAArE,cAAwFlF,EAAKT,QAA7F,wDAAoJ4F,EAApJ,QACQD,EAAcD,EAAOE,EAAaF,GAAQvD,QAAQ,IAE9D,GAAIlB,EAXI,IAWe,EAAE,CAC1B,IAAIR,EAAOD,IACPkF,GAA+B,IAArBxF,EAAa,GAAI,KAASiC,QAAQ,GAC5C0D,GAAS3F,EAAa,EAAG,IAAI,IAAIiC,QAAQ,GAE7C,MAAO,CADA,oCAAgC1B,EAAKT,QAArC,2BAA+D0F,EAA/D,oBAAiFG,EAAjF,0BAAwGpF,EAAKT,QAA7G,MACK0F,EAAS,IAAOG,EAAQpF,EAAKR,MAAMkC,QAAQ,IAGvD,IAMI2D,EANAvD,EAAOrC,EAAa,EAAG,GACvB6F,EAAgB,IAAQ7F,EAAa,EAAG,IACxC8F,EAAiB,IAAQ9F,EAAa,EAAG,IACzC+F,EAAe,IAAQ/F,EAAa,EAAG,IACvCgG,EAAgB,IAAQhG,EAAa,EAAG,IAGxC0D,EAAM,EAgBV,OAfa,IAATrB,GACAuD,EAAM,KACNlC,GAAQmC,EAAeE,GAAeF,EAAeC,GAAuBA,EAAgBE,GAAgBH,EAAeC,GAApD,GAAqE7D,QAAQ,IAEtI,IAATI,GACLuD,EAAM,KACNlC,GAAOmC,EAAeE,GAAeF,EAAeC,IAAgB7D,QAAQ,KAG5E2D,EAAM,KACNlC,GAAOoC,EAAgBE,GAAgBH,EAAeC,IAAgB7D,QAAQ,IAK3E,CAFA,wCAAoC2D,EAApC,+BAA8DC,EAAa5D,QAAQ,GAAnF,gBAA6F8D,EAAY9D,QAAQ,GAAjH,sBAAiI6D,EAAc7D,QAAQ,GAAvJ,gBAAiK+D,EAAa/D,QAAQ,GAAtL,2HAEIyB,GC6COnB,CAAuBZ,KAAKhB,MAAMI,OAE5CY,KAAKhB,MAAMC,aAAewB,EAAM,GAChCT,KAAKG,SAAS,CACVlB,WAAawB,EAAM,GACnBtB,SAAUsB,EAAM,GAChBnB,OAAQ,IAIZU,KAAKG,SAAS,CAACb,OAAQ,O,+BAO/B,OADAU,KAAKP,iBAED,yBAAK7B,UAAU,YAEX,gDAAsBoC,KAAKhB,MAAMI,MAAM,EAAI,GAE3C,6BACKY,KAAKhB,MAAMG,UAGhB,6BAEA,2BAAO0B,KAAK,OAAOC,SAAUd,KAAKT,aAAcwB,YAAY,SAASR,MAAOP,KAAKhB,MAAME,SAEvF,6BAZJ,IAYW,6BAEP,4BAAQtB,UAAU,SAASoD,QAAShB,KAAKN,aAAzC,UACA,4BAAQ9B,UAAU,OAAOoD,QAAShB,KAAKN,aAAvC,iBACA,4BAAQ9B,UAAU,UAAUoD,QAAShB,KAAKN,aAA1C,6BACA,4BAAQ9B,UAAU,cAAcoD,QAAShB,KAAKN,aAA9C,eACA,6BACA,6BAEA,4BAAKM,KAAKhB,MAAMK,QAChB,6BACA,yGACA,8BAAU0B,YAAY,6BAA6BE,KAAK,KAAKC,KAAK,OAClE,kC,GA/HiBnD,IAAMC,WCkJxBsG,E,kDAhJX,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVoF,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHvF,MAAO,EACPC,OAAQ,GACRC,OAAQ,GAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBAlBE,E,wDAqBPI,GACRA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOnC,UACb,WAATkC,EACAE,KAAKL,QAES,SAATG,GACLE,KAAKG,UAAS,SAAAC,GACV,MAAO,CACHhB,MAAOgB,EAAUhB,MAAQ,EACzBC,OAAQ,GACRC,OAAQ,EACRJ,OAAQ,S,8BAOhBc,KAAKhB,MAAME,SAAWc,KAAKhB,MAAMC,WACP,YAAtBe,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,UAAWC,OAAQ,IAIpB,cAAtBU,KAAKhB,MAAMK,QACXW,KAAKG,SAAS,CAACd,OAAQ,YAAaC,OAAQ,M,mCAK3CM,GACT,IAAMW,EAAQX,EAAMG,OAAOQ,MAC3BP,KAAKG,SAAS,CACVjB,OAAQqB,EACRC,OAAQ,M,uCAKZ,GAA0B,IAAtBR,KAAKhB,MAAMM,OAAa,CACxB,IAAMmB,GCjEWrB,EDiEoBY,KAAKhB,MAAMI,OCnE3C,KAIU,EASZ,CARN,sEACG,IACA,KACA,KACA,IACA,oBACE,KAIDA,EAfI,KAee,EASjB,CARN,uEACG,WACA,gBACA,gBACA,qBACA,oBACE,KAIDA,EA1BI,KA0Be,EASjB,CARN,yDACG,IACA,IACA,IACA,IACA,IACE,KAIDA,EArCI,KAqCe,EASjB,CARN,qEACG,8CACA,6CACA,sCACA,sCACA,0BACE,KAIDA,EAhDI,KAgDe,EASjB,CARN,kGACG,IACA,IACA,IACA,KACA,oBACE,KAIDA,EA3DI,KA2De,EASjB,CARN,oEACG,iBACA,eACA,gBACA,kBACA,oBACE,KAIDA,EAtEI,KAsEe,EASjB,CARN,4FACG,uBACA,wBACA,iBACA,yBACA,oBACE,KAIDA,EAjFI,KAiFe,EASjB,CARN,8FACG,KACA,KACA,KACA,KACA,KACE,KAIDA,EA5FI,KA4Fe,EASjB,CARN,+DACG,IACA,IACA,IACA,IACA,IACE,KAIDA,EAvGI,KAuGe,EASjB,CARN,+FACG,+BACA,yBACA,uBACA,wBACA,oBACE,UAPL,EDlCOY,KAAKhB,MAAMG,WAAasB,EAAM,GAC9BT,KAAKG,SAAS,CACVlB,WAAawB,EAAM,GACnBtB,SAAUsB,EAAM,GAChB8D,EAAG9D,EAAM,GACT+D,EAAG/D,EAAM,GACTgE,EAAGhE,EAAM,GACTiE,EAAGjE,EAAM,GACTkE,EAAGlE,EAAM,GACTnB,OAAQ,IAIZU,KAAKG,SAAS,CAACb,OAAQ,IChFX,IAACF,I,+BDuFrB,OADAY,KAAKP,iBAED,yBAAK7B,UAAU,YAEX,gDAAsBoC,KAAKhB,MAAMI,MAAM,GAAK,GAE5C,6BACKY,KAAKhB,MAAMG,UAGhB,6BAEA,yBAAKrB,GAAG,YACJ,2BAAO4F,IAAI,aACX,2BAAO7C,KAAK,QAAQf,KAAK,SAASS,MAAM,IAAIzC,GAAG,YAAYkD,QAAShB,KAAKT,aAAcoE,QAA+B,MAAtB3D,KAAKhB,MAAME,SAC1Gc,KAAKhB,MAAMuF,IAEhB,6BAEA,yBAAKzG,GAAG,YACJ,2BAAO4F,IAAI,aACX,2BAAO7C,KAAK,QAAQf,KAAK,SAASS,MAAM,IAAIzC,GAAG,YAAYkD,QAAShB,KAAKT,aAAcoE,QAA+B,MAAtB3D,KAAKhB,MAAME,SAC1Gc,KAAKhB,MAAMwF,IAEhB,6BAEA,yBAAK1G,GAAG,YACJ,2BAAO4F,IAAI,aACX,2BAAO7C,KAAK,QAAQf,KAAK,SAASS,MAAM,IAAIzC,GAAG,YAAYkD,QAAShB,KAAKT,aAAcoE,QAA+B,MAAtB3D,KAAKhB,MAAME,SAC1Gc,KAAKhB,MAAMyF,IAEhB,6BAEA,yBAAK3G,GAAG,YACJ,2BAAO4F,IAAI,aACX,2BAAO7C,KAAK,QAAQf,KAAK,SAASS,MAAM,IAAIzC,GAAG,YAAYkD,QAAShB,KAAKT,aAAcoE,QAA+B,MAAtB3D,KAAKhB,MAAME,SAC1Gc,KAAKhB,MAAM0F,IAEhB,6BAEA,yBAAK5G,GAAG,YACJ,2BAAO4F,IAAI,aACX,2BAAO7C,KAAK,QAAQf,KAAK,SAASS,MAAM,IAAIzC,GAAG,YAAYkD,QAAShB,KAAKT,aAAcoE,QAA+B,MAAtB3D,KAAKhB,MAAME,SAC1Gc,KAAKhB,MAAM2F,IAEhB,6BAEA,6BA7CJ,IA6CW,6BAEP,4BAAQ/G,UAAU,SAASoD,QAAShB,KAAKN,aAAzC,UACA,4BAAQ9B,UAAU,OAAOoD,QAAShB,KAAKN,aAAvC,iBACA,6BACA,6BAEA,4BAAKM,KAAKhB,MAAMK,a,GA3IXtB,IAAMC,W,ME4BZ4G,MApBf,WACE,OACM,6BACI,kBAAC,IAAD,KACI,wBAAIhH,UAAU,cAAa,kBAAC,IAAD,CAAMC,GAAI,QAASC,GAAG,SAAtB,uBAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+G,OAAK,EAACC,KAAM,IAAKC,UAAWpH,IACnC,kBAAC,IAAD,CAAOmH,KAAM,QAASC,UAAWpH,IACjC,kBAAC,IAAD,CAAOmH,KAAM,aAAcC,UAAW9G,IACtC,kBAAC,IAAD,CAAO6G,KAAM,YAAaC,UAAWjG,IACrC,kBAAC,IAAD,CAAOgG,KAAM,QAASC,UAAWnD,IACjC,kBAAC,IAAD,CAAOkD,KAAM,iBAAkBC,UAAWhC,IAC1C,kBAAC,IAAD,CAAO+B,KAAM,sBAAuBC,UAAWnB,IAC/C,kBAAC,IAAD,CAAOkB,KAAM,UAAWC,UAAWT,QCpBvDU,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.9170ad97.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass HomeScreen extends React.Component{\n\n\n\n    render() {\n        return (\n            <div className=\"home_screen\">\n                <div>\n                    <p>\n                        Welcome to Simply Science! We are here to help you prepare for any of your science exams! Most problems will also generate \n                        individual steps for you to follow along. \n                    </p>\n                </div>\n                <div className=\"subjects\">\n                    <button><Link to={\"/Chemistry\"} id=\"Chemistry\"> Chemistry Practice Problem </Link></button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default HomeScreen;","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport \"./Chemistry.css\"\n\nclass Chemistry extends React.Component{\n\n    render() {\n        return (\n            <div className=\"chemistry_home_screen\">\n                <div className=\"chapter\">\n                    <h4><Link to={'/MoleCalc'} id=\"moleCalc\"> Mole Calculations </Link></h4>\n                </div>\n                <div className=\"chapter\">\n                    <h4><Link to={'/Mole'} id=\"mole\"> Mole </Link></h4>\n                </div>\n                <div className=\"chapter\">\n                    <h4><Link to={'/Stoichiometry'} id=\"Stoichiometry\"> Stoichiometry </Link></h4>\n                </div>\n                <div className=\"chapter\">\n                    <h4><Link to={'/Solution_chemistry'} id=\"Solution_chemistry\"> Solution Chemistry </Link></h4>\n                </div>\n                <div className=\"chapter\">\n                    <h4><Link to={'/Atomic'} id=\"Atomic\"> Atomic Theory </Link></h4>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Chemistry","const num_of_q = 6\n\nexport const makeQuestion = (index) => {\n    if (index%num_of_q === 0){\n        const rand = getRandomInt(20, 120);\n        let chem = getRandomChem()\n        const m = (rand / chem[1]).toFixed(2);\n        const q = `How many moles are in ${rand} grams of ${chem[0]}?`;\n        return [q, m]\n    }\n    else if (index%num_of_q === 1){\n        const rand = (getRandomInt(1, 10000) / 1000).toFixed(3)\n        let chem = getRandomChem()\n        const q = `How many grams are in ${rand} moles of ${chem[0]}?`\n        return [q, (rand * chem[1]).toFixed(2)]\n    }\n    else if (index%num_of_q === 2){\n        const rand = (getRandomInt(1, 1000)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many molecules are in ${rand} moles of ${chem[0]}? (Divide the final answer by 10^23. Example: if the answer is 5.6 * 10^24, enter 56)`\n        return [q, (rand * 6.02).toFixed(2)]\n    }\n    else if (index%num_of_q === 3){\n        const rand = (getRandomInt(1, 100)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many moles are in ${rand} * 10^23 molecules of ${chem[0]}?`\n        return [q, (rand / 6.02).toFixed(2)]\n    }\n    else if (index%num_of_q === 4){\n        const rand = (getRandomInt(1, 1000)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many molecules are in ${rand} grams of ${chem[0]}? (Divide the final answer by 10^23. Example: if the answer is 5.6 * 10^24, enter 56)`\n        return [q, (rand / chem[1] * 6.02).toFixed(2)]\n    }\n    else{\n        const rand = (getRandomInt(1, 100)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many grams are in ${rand} * 10^23 molecules of ${chem[0]}?`\n        return [q, (rand / 6.02 * chem[1]).toFixed(2)]\n    }\n}\n\nconst Chemical_table =  [\n    {formula: \"Li2O\", mass: 29.90},\n    {formula: \"NH3\", mass: 17},\n    {formula: \"Oxygen\", mass: 32},\n    {formula: \"water\", mass: 18},\n    {formula: \"N2I6\", mass: 789.4},\n    {formula: \"H2SO4\", mass: 98.079}\n]\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getRandomChem(){\n    let chem = Chemical_table[ getRandomInt(0, Chemical_table.length - 1) ]\n    let chem_form = chem.formula\n    let chem_mass = chem.mass\n    return [chem_form, chem_mass]\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass MoleCalc extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            const q = \"The answer is \" + this.state.answer_key\n            alert(q)\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\"\n            })\n        }\n    }\n\n    check(){\n        if ((parseFloat(this.state.answer)).toFixed(2) === this.state.answer_key){\n            if (this.state.status !== \"Correct\"){\n                this.setState({status: \"Correct\", create: 0})\n            }\n        }\n        else{\n            if (this.state.status !== \"Incorrect\"){\n                this.setState({status: \"Incorrect\", create: 0})\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%6 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n                <br />\n                <h4>Once you have the correct answer, please show your work here for marking.</h4>\n                <textarea placeholder=\"Please Show Your Work Here\" cols=\"40\" rows=\"10\" ></textarea>\n                <br />\n            </div>\n        )\n    }\n\n}\n\nexport default MoleCalc","const num_of_q = 3\n\nexport const makeQuestion = (index) => {\n    let ans;\n    if (index%num_of_q === 0){\n        const rand = (getRandomInt(200, 2000))/1000;\n        let chem = getRandomChem()\n        let first_ele_mass = (rand * chem.first_ele_mass * chem.first_ele_portion).toFixed(1)\n        let second_ele_mass = (rand * chem.second_ele_mass * chem.second_ele_portion).toFixed(1)\n        let first_ele_mol = (first_ele_mass / chem.first_ele_mass).toFixed(3);\n        let second_ele_mol = (second_ele_mass / chem.second_ele_mass).toFixed(3);\n        let q\n        if (\"third_ele\" in chem){\n            let third_ele_mass = (rand * chem.third_ele_mass * chem.third_ele_portion).toFixed(1)\n            let third_ele_mol = (third_ele_mass / chem.third_ele_mass).toFixed(3);\n            q = `This compound has a mass composition of ${first_ele_mass}g of ${chem.first_ele}, ${second_ele_mass}g of ${chem.second_ele} and ${third_ele_mass}g of ${chem.third_ele}. What is the Empirical Formula of this compound? (Remember to captilize first letter of every element)`;\n            ans = `Mole of ${chem.first_ele} in compound X = ${first_ele_mass}g * (1 mol / ${chem.first_ele_mass}g) = ${first_ele_mol} \\n\n            Mole of ${chem.second_ele} in compound X = ${second_ele_mass}g * (1 mol / ${chem.second_ele_mass}g) = ${second_ele_mol} \\n\n            Mole of ${chem.third_ele} in compound X = ${third_ele_mass}g * (1 mol / ${chem.third_ele_mass}g) = ${third_ele_mol} \\n\n            \\n\n            Now find the ratio between the 3 elements: \\n\n            ${first_ele_mol} : ${second_ele_mol} : ${third_ele_mol} = ${chem.first_ele_portion} : ${chem.second_ele_portion} : ${chem.third_ele_portion} \\n\n            \\n\n            Therefore the answer is ${chem.formula}.`;\n        }\n        else{\n            ans = `Mole of ${chem.first_ele} in compound X = ${first_ele_mass}g * (1 mol / ${chem.first_ele_mass}g) = ${first_ele_mol} \\n\n            Mole of ${chem.second_ele} in compound X = ${second_ele_mass}g * (1 mol / ${chem.second_ele_mass}g) = ${second_ele_mol} \\n\n            \\n\n            Now find the ratio between the 2 elements:\\n\n            ${first_ele_mol} : ${second_ele_mol} = ${chem.first_ele_portion} : ${chem.second_ele_portion}\\n\n            \\n\n            Therefore the answer is ${chem.formula}.`;\n            q = `This compound has a mass composition of ${first_ele_mass}g of ${chem.first_ele} and ${second_ele_mass}g of ${chem.second_ele}. What is the Empirical Formula of this compound? (Remember to captilize first letter of every element)`;\n        }\n        return [q, chem.formula, ans]\n    }\n    else if (index%num_of_q === 1){\n        let chem = getRandomChem()\n        let first_ele_percent = (((chem.first_ele_mass * chem.first_ele_portion) / chem.mass)*100).toFixed(1)\n        let first_ele_mass = (chem.first_ele_mass * chem.first_ele_portion).toFixed(1)\n        let second_ele_percent = (((chem.second_ele_mass * chem.second_ele_portion) / chem.mass)*100).toFixed(1)\n        let second_ele_mass = (chem.second_ele_mass * chem.second_ele_portion).toFixed(1)\n        let q\n        if (\"third_ele\" in chem){\n            let third_ele_percent = (((chem.third_ele_mass * chem.third_ele_portion) / chem.mass)*100).toFixed(1)\n            let third_ele_mass = (chem.third_ele_mass * chem.third_ele_portion).toFixed(1)\n            q = `A sample has a mass number of ${chem.mass}g. If ${first_ele_percent}% of the sample is ${chem.first_ele}, ${second_ele_percent}% of the sample is ${chem.second_ele} and ${third_ele_percent}% of the sample is ${chem.third_ele}, what is the Empirical Formula? (Remember to captilize first letter of every element)`\n            ans = `Mass of ${chem.first_ele}: ${chem.mass}g * ${first_ele_percent}% = ${first_ele_mass} \\n\n            Mass of ${chem.second_ele}: ${chem.mass}g * ${second_ele_percent}% = ${second_ele_mass} \\n\n            Mass of ${chem.third_ele}: ${chem.mass}g * ${third_ele_percent}% = ${third_ele_mass} \\n\n            Mole of ${chem.first_ele}: ${first_ele_mass}g * (1 mol / ${chem.first_ele_mass}g) = ${chem.first_ele_portion} mol \\n\n            Mole of ${chem.second_ele}: ${second_ele_mass}g * (1 mol / ${chem.second_ele_mass}g) = ${chem.second_ele_portion} mol \\n\n            Mole of ${chem.third_ele}: ${third_ele_mass}g * (1 mol / ${chem.third_ele_mass}g) = ${chem.third_ele_portion} mol \\n\n            Therefore, Empirical formula is ${chem.formula}`\n        }\n        else{\n            ans = `Mass of ${chem.first_ele}: ${chem.mass}g * ${first_ele_percent}% = ${first_ele_mass} \\n\n            Mass of ${chem.second_ele}: ${chem.mass}g * ${second_ele_percent}% = ${second_ele_mass} \\n\n            Mole of ${chem.first_ele}: ${first_ele_mass}g * (1 mol / ${chem.first_ele_mass}g) = ${chem.first_ele_portion} mol \\n\n            Mole of ${chem.second_ele}: ${second_ele_mass}g * (1 mol / ${chem.second_ele_mass}g) = ${chem.second_ele_portion} mol \\n\n            Therefore, Empirical formula is ${chem.formula}`\n            q = `A sample has a mass number of ${chem.mass}g. If ${first_ele_percent}% of the sample is ${chem.first_ele} and ${second_ele_percent}% of the sample is ${chem.second_ele}, what is the Empirical Formula? (Remember to captilize first letter of every element)`\n        }    \n        return [q, chem.formula, ans]\n    }\n    else{\n        const answer = getRandomInt(0, 1)\n        const rand1 = (getRandomInt(200, 3000))/1000;\n        const rand2 = (getRandomInt(200, 3000))/1000;\n        let x_first_ele_mass, x_second_ele_mass, y_first_ele_mass, y_second_ele_mass\n        if (answer === 0){\n            x_first_ele_mass = (rand1 * Chemical_table[0].first_ele_mass).toFixed(1)\n            x_second_ele_mass = (rand1 * Chemical_table[0].second_ele_mass).toFixed(1)\n            y_first_ele_mass = (rand2 * Chemical_table[1].first_ele_mass).toFixed(1)\n            y_second_ele_mass = (rand2 * Chemical_table[1].second_ele_mass).toFixed(1)\n            ans = `Use the same method as question 1 to find the emperical formula for these compounds. \\n\n            The first compound X is ${Chemical_table[0].formula}. \\n\n            The second compound Y is ${Chemical_table[1].formula}. \\n\n            Therefore, they are NOT the same compound.`\n        }\n        else{\n            let i = getRandomInt(0, 1)\n            x_first_ele_mass = (rand1 * Chemical_table[i].first_ele_mass).toFixed(1)\n            x_second_ele_mass = (rand1 * Chemical_table[i].second_ele_mass).toFixed(1)\n            y_first_ele_mass = (rand2 * Chemical_table[i].first_ele_mass).toFixed(1)\n            y_second_ele_mass = (rand2 * Chemical_table[i].second_ele_mass).toFixed(1)\n            ans = `Use the same method as question 1 to find the emperical formula for these compounds. \\n\n            The first compound X is ${Chemical_table[i].formula}. \\n\n            The second compound Y is ${Chemical_table[i].formula}. \\n\n            Therefore, they are the SAME compound.`\n        }\n        const q = `A compound X has a mass composition of ${x_first_ele_mass}g Manganese and ${x_second_ele_mass}g of oxygen. A compound Y has a mass composition of ${y_first_ele_mass}g of manganese and ${y_second_ele_mass}g of oxygen. Are they the same compound? (Answer \"y\" for same compound, \"n\" for different compound)`\n        return [q, answer === 0? \"n\" : \"y\", ans]\n    }\n}\n\nconst Chemical_table =  [\n    {formula: \"Mn3O4\", mass: 230.8, first_ele: \"Manganese\", first_ele_mass: 54.9, first_ele_portion: 3, second_ele: \"Oxygen\", second_ele_mass: 16, second_ele_portion: 4},\n    {formula: \"Mn4O7\", mass: 331.7, first_ele: \"Manganese\", first_ele_mass: 54.9, first_ele_portion: 4, second_ele: \"Oxygen\", second_ele_mass: 16, second_ele_portion: 7},\n    {formula: \"Li2O\", mass: 29.9, first_ele: \"Lithium\", first_ele_mass: 6.94, first_ele_portion: 2, second_ele: \"Oxygen\", second_ele_mass: 16, second_ele_portion: 1},\n    {formula: \"NH3\", mass: 17.0, first_ele: \"Nitrogen\", first_ele_mass: 14, first_ele_portion: 1, second_ele: \"Hydrogen\", second_ele_mass: 1, second_ele_portion: 3},\n    {formula: \"K2CO3\", mass: 138.2, first_ele: \"Potassium\", first_ele_mass: 39, first_ele_portion: 2, second_ele: \"Carbon\", second_ele_mass: 12, second_ele_portion: 1, third_ele: \"Oxygen\", third_ele_mass: 16, third_ele_portion: 3},\n]\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getRandomChem(){\n    return Chemical_table[ getRandomInt(0, Chemical_table.length - 1) ]\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass Mole extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1,\n            steps: \"\",\n            show_steps: 0\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            this.setState({\n                show_steps: 1\n            })\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\",\n                    show_steps: 0\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\",\n                show_steps: 0\n            })\n        }\n    }\n\n    check(){\n        if (this.state.answer === this.state.answer_key){\n            if (this.state.status !== \"Correct\"){\n                this.setState({status: \"Correct\", create: 0})\n            }\n        }\n        else{\n            if (this.state.status !== \"Incorrect\"){\n                this.setState({status: \"Incorrect\", create: 0})\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0,\n                    steps: quest[2]\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%3 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n                <br />\n                <h4>Once you have the correct answer, please show your work here for marking.</h4>\n                <textarea placeholder=\"Please Show Your Work Here\" cols=\"40\" rows=\"10\" ></textarea>\n                <br />\n                {this.state.show_steps === 0? null : this.state.steps.split('\\n').map(i => {\n                        return <p>{i}</p>\n                })}\n            </div>\n        )\n    }\n\n}\n\nexport default Mole","const num_of_q = 2\n\nexport const makeQuestion = (index) => {\n    if (index%num_of_q === 0){\n        let mass = (getRandomInt(5000, 20000))/100;\n        let product = (getRandomInt(0, 1) === 0? \"Cl2\" : \"KOH\")\n        let ans = ((mass / (product === \"KOH\"? 56.1 * 6 : 35.45 * 3)) / 122.6).toFixed(4)\n        let mole_product = (mass / (product === \"KOH\"? 56.1 : 35.45 )).toFixed(3)\n        let q = `For the following balanced equation: KClO3 + 5 KCl + 3 H2O -> 3 Cl2 + 6 KOH, if there is ${mass}g of ${product} formed \n            in this chemical reaction, how much KClO3 (in grams) was consumed assuming 100% production rate?`;\n        let steps = `Mole of ${product} = ${mass} * (1 mol / ${product === \"KOH\"? 56.1 : 35.45 }g) = ${mole_product}mol \\n \n            Mass of KClO3 comsumed = ${mole_product}mol ${product} * (1 mol KClO3 / ${product === \"KOH\"? \"6 mol KOH\" : \"3 mol Cl2\"}) * (1 mol / 122.6g) = ${ans}g`\n        return [q, ans, \"\", steps]\n    }\n    else{\n        const hcl_mass = (getRandomInt(200, 500))/100;\n        const na2co3_mass = (getRandomInt(200, 500))/100;\n        let mole_h = (hcl_mass / 36.5 / 2)\n        let mole_n = (na2co3_mass / 106)\n        let ans\n        let excess\n        if (mole_h > mole_n){\n            excess = \"HCl\"\n            ans = (((mole_h - mole_n) * 36.5 * 2).toFixed(3)).toString()\n        }\n        else{\n            excess = \"Na2CO3\"\n            ans = (((mole_n - mole_h) * 106).toFixed(3)).toString()\n        }\n        const q = `For the following equation: 2 HCl + Na2CO3 -> 2 NaCl + CO2 + H2O, if ${hcl_mass}g of HCl is reacted \n            with ${na2co3_mass}g of Na2CO3, which reactant will be in excess and how much will be left unreacted?`\n        let steps = `Mole of HCl: ${hcl_mass}g * (1 mol / 36.5g) = ${(mole_h*2).toFixed(4)}mol \\n \n            Mole of Na2CO3: ${na2co3_mass}g * (1 mol / 106g) = ${mole_n.toFixed(4)}mol \\n \n            The mole ratio between HCl and Na2CO3 is 2:1, therefore, with each mole of Na2CO3 consumed, there will be 2 mole of HCl consumed. \\n \n            Therefore when we compare, we divide the mole of HCl by 2:\n            ${(mole_h*2).toFixed(4)} / 2 = ${mole_h.toFixed(4)} \\n \n            comparing HCl (${mole_h.toFixed(4)} mol) with Na2CO3 (${mole_n.toFixed(4)} mol), we can see that ${excess} will be in excess \\n \n            Mass of ${excess} = ${excess === \"HCl\"? `(${mole_h.toFixed(4)} mol - ${mole_n.toFixed(4)} mol) * 2 * 36.5 g/mol` : `(${mole_n.toFixed(4)} mol - ${mole_h.toFixed(4)} mol) * 106 g/mol`} = ${ans}g`\n        return [q, ans, excess, steps]\n    }\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass Stoichiometry extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1,\n            steps: \"\",\n            show_steps: 0,\n            answer_key_excess: \"\",\n            answer_excess: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            this.setState({\n                show_steps: 1\n            })\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\",\n                    show_steps: 0,\n                    answer_key_excess: \"\",\n                    answer_excess: \"\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\",\n                show_steps: 0,\n                answer_key_excess: \"\",\n                answer_excess: \"\"\n            })\n        }\n    }\n\n    check(){\n        if (this.state.index%2 === 0){\n            if ((parseFloat(this.state.answer)).toFixed(4) === this.state.answer_key){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n        else{\n            if ((parseFloat(this.state.answer)).toFixed(3) === this.state.answer_key && this.state.answer_excess === this.state.answer_key_excess){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        if (event.target.name === \"option\"){\n            this.setState({\n                answer_excess: value,\n                submit: 0\n            })\n        }\n        else{\n            this.setState({\n                answer: value,\n                submit: 0\n            })\n        }\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0,\n                    answer_key_excess: quest[2],\n                    steps: quest[3]\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%2 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                {this.state.index%2 === 0? null : <div>\n\n                    <p>Which reactant will be in excess?</p>\n                    \n                    <label for='option-11' >\n                    <input type='radio' name='option' value='HCl' id='option-11' onClick={this.handleChange} checked={this.state.answer_excess === \"HCl\"} />\n                    HCl</label>\n                    <br />\n\n                    <div id='block-12' >\n                        <label for='option-12' >\n                        <input type='radio' name='option' value='Na2CO3' id='option-12' onClick={this.handleChange} checked={this.state.answer_excess === \"Na2CO3\"}/>\n                        Na2CO3</label>\n                    </div>\n                    <br />\n\n                    <p>How much will be left unreacted? (leave your answer in grams)</p>\n\n                </div>}\n\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n\n                <br />\n=\n                <h4>Once you have the correct answer, please show your work here for marking.</h4>\n                <textarea placeholder=\"Please Show Your Work Here\" cols=\"40\" rows=\"10\" ></textarea>\n                <br />\n\n                {this.state.show_steps === 0? null : this.state.steps.split('\\n').map(i => {\n                        return <p>{i}</p>\n                })}\n            </div>\n        )\n    }\n\n}\n\nexport default Stoichiometry","const num_of_q = 3\n\nexport const makeQuestion = (index) => {\n    if (index%num_of_q === 0){\n        let chem = getRandomChem()\n        let volume = getRandomInt(15, 50) * 10\n        let initial_molar = getRandomInt(4, 8).toFixed(2)\n        let final_molar = (getRandomInt(10, 30)/10).toFixed(2)\n        let q = `What volume (ml) of water needs to be added to ${volume} mL of ${initial_molar} M ${chem.formula} in order to bring the concentration down to ${final_molar} M?`;\n        return [q, ((initial_molar*volume/final_molar)-volume).toFixed(1)]\n    }\n    else if (index%num_of_q === 1){\n        let chem = getRandomChem()\n        let volume = (getRandomInt(10, 20)*100).toFixed(1)\n        let molar = (getRandomInt(4, 10)/10).toFixed(3)\n        const q = `Calculate the mass (g) of ${chem.formula} needed to make ${volume} mL of a ${molar} M solution of ${chem.formula}.`\n        return [q, (volume / 1000 * molar * chem.mass).toFixed(1)]\n    }\n    else{\n        let rand = getRandomInt(0, 2)\n        var first_volume = (0.05 * (getRandomInt(4, 10)))\n        let second_volume = (0.05 * (getRandomInt(4, 10)))\n        let first_molar = (0.05 * (getRandomInt(4, 10)))\n        let second_molar = (0.05 * (getRandomInt(4, 10)))\n\n        let ion\n        let ans = 0\n        if (rand === 0){\n            ion = \"Cl\"\n            ans = ((first_volume * first_molar / (first_volume + second_volume)) + 2 * (second_volume * second_molar / (first_volume + second_volume))).toFixed(2)\n        }\n        else if (rand === 1){\n            ion = \"Na\"\n            ans = (first_volume * first_molar / (first_volume + second_volume)).toFixed(2)\n        }\n        else{\n            ion = \"Ca\"\n            ans = (second_volume * second_molar / (first_volume + second_volume)).toFixed(2)\n        }\n\n        const q = `What is the concentration of [${ion}] in the mixture of ${first_volume.toFixed(2)}L of ${first_molar.toFixed(2)}M NaCl and ${second_volume.toFixed(2)}L of ${second_molar.toFixed(2)}M CaCl2? Dissociation equation for NaCl: NaCl -> Na + Cl,\n        Dissociation equation for CaCl2: CaCl2 -> Ca + 2 Cl.`\n        return [q, ans]\n    }\n}\n\nconst Chemical_table =  [\n    {formula: \"H2SO4\", mass: 98.08},\n    {formula: \"K2SO3\", mass: 158.2},\n    {formula: \"NaCl\", mass: 58.44},\n    {formula: \"CaCl2\", mass: 110.98},\n]\n\nfunction getRandomChem(){\n    return Chemical_table[ getRandomInt(0, Chemical_table.length - 1) ]\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass Solution_chemistry extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            const q = \"The answer is \" + this.state.answer_key\n            alert(q)\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\"\n            })\n        }\n    }\n\n    check(){\n        if (this.state.index%3 === 0 || this.state.index%3 === 1){\n            if ((parseFloat(this.state.answer)).toFixed(1) === this.state.answer_key){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n        else {\n            if ((parseFloat(this.state.answer)).toFixed(2) === this.state.answer_key){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%3 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n                <br />\n                <h4>Once you have the correct answer, please show your work here for marking.</h4>\n                <textarea placeholder=\"Please Show Your Work Here\" cols=\"40\" rows=\"10\" ></textarea>\n                <br />\n            </div>\n        )\n    }\n\n}\n\nexport default Solution_chemistry","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass Atomic extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            A: \"\",\n            B: \"\",\n            C: \"\",\n            D: \"\",\n            E: \"\",\n            index: 0,\n            status: \"\",\n            create: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\"\n                }\n            })\n        }\n    }\n\n    check(){\n        if (this.state.answer === this.state.answer_key){\n            if (this.state.status !== \"Correct\"){\n                this.setState({status: \"Correct\", create: 0})\n            }\n        }\n        else{\n            if (this.state.status !== \"Incorrect\"){\n                this.setState({status: \"Incorrect\", create: 0})\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.question !== quest[0]){\n                this.setState({\n                    answer_key : quest[6],\n                    question: quest[0],\n                    A: quest[1],\n                    B: quest[2],\n                    C: quest[3],\n                    D: quest[4],\n                    E: quest[5],\n                    create: 0\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%10 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <div id='block-11' >\n                    <label for='option-11' >\n                    <input type='radio' name='option' value='A' id='option-11' onClick={this.handleChange} checked={this.state.answer === \"A\"} />\n                    {this.state.A}</label>\n                </div>\n                <br />\n\n                <div id='block-12' >\n                    <label for='option-12' >\n                    <input type='radio' name='option' value='B' id='option-12' onClick={this.handleChange} checked={this.state.answer === \"B\"}/>\n                    {this.state.B}</label>\n                </div>\n                <br />\n\n                <div id='block-13' >\n                    <label for='option-13' >\n                    <input type='radio' name='option' value='C' id='option-13' onClick={this.handleChange} checked={this.state.answer === \"C\"}/>\n                    {this.state.C}</label>\n                </div>\n                <br />\n\n                <div id='block-14' >\n                    <label for='option-14' >\n                    <input type='radio' name='option' value='D' id='option-14' onClick={this.handleChange} checked={this.state.answer === \"D\"}/>\n                    {this.state.D}</label>\n                </div>\n                <br />\n\n                <div id='block-15' >\n                    <label for='option-15' >\n                    <input type='radio' name='option' value='E' id='option-15' onClick={this.handleChange} checked={this.state.answer === \"E\"}/>\n                    {this.state.E}</label>\n                </div>\n                <br />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n            </div>\n        )\n    }\n\n}\n\nexport default Atomic","const num_of_q = 10\n\nexport const makeQuestion = (index) => {\n    let q, a, b, c, d, e, ans;\n    if (index%num_of_q === 0){\n        q = `Which of the following elements has the greatest electronegativity?`;\n        a = \"F\";\n        b = \"Cl\";\n        c = \"Br\";\n        d = \"C\";\n        e = \"None of the above\";\n        ans = \"A\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 1){\n        q = `Which is the electron configuration of an atom in the excited state?`;\n        a = \"1s2, 2s1\";\n        b = \"1s2, 2s2, 2p1\";\n        c = \"1s2, 2s2, 2p5\";\n        d = \"1s2, 2s2, 2p2, 3s1\";\n        e = \"None of the above\";\n        ans = \"C\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 2){\n        q = `How many s orbitals can exist in the 3rd energy level?`;\n        a = \"1\";\n        b = \"2\";\n        c = \"3\";\n        d = \"4\";\n        e = \"5\";\n        ans = \"A\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 3){\n        q = `The major difference between a 1s orbital and a 2s orbital is that`;\n        a = \"2s orbital has a different geometric shape.\";\n        b = \"2s orbital is at a different energy level.\";\n        c = \"2s orbital can hold more electrons.\";\n        d = \"2s orbital can hold less electrons.\";\n        e = \"there is no difference.\";\n        ans = \"B\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 4){\n        q = `What is the total number of valence electrons in an atom with the electron configuration 2-8-5?`;\n        a = \"2\";\n        b = \"5\";\n        c = \"8\";\n        d = \"15\";\n        e = \"None of the above\";\n        ans = \"B\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 5){\n        q = `A Ca[2+] ion differs from a Ca[0] atom in that the Ca[2+] ion has`;\n        a = \"more electrons\";\n        b = \"more protons\";\n        c = \"fewer protons\";\n        d = \"fewer electrons\";\n        e = \"none of the above\";\n        ans = \"D\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 6){\n        q = `Which particles are referred to as nucleons (subatomic particles located in the nucleus)?`;\n        a = \"protons and neutrons\";\n        b = \"protons and electrons\";\n        c = \"neutrons, only\";\n        d = \"neutrons and electrons\";\n        e = \"None of the above\";\n        ans = \"A\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 7){\n        q = `What is the mass number of an atom that contains 19 protons, 19 electrons, and 20 neutrons?`;\n        a = \"25\";\n        b = \"19\";\n        c = \"58\";\n        d = \"20\";\n        e = \"39\";\n        ans = \"E\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 8){\n        q = `How many protons are in the nucleus of an atom of beryllium?`;\n        a = \"2\";\n        b = \"4\";\n        c = \"9\";\n        d = \"5\";\n        e = \"7\";\n        ans = \"B\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    else if (index%num_of_q === 9){\n        q = `The atomic mass of an element is defined as the weighted average mass of that element’s`;\n        a = \"naturally occurring isotopes\";\n        b = \"least abundant isotope\";\n        c = \"radioactive isotopes\";\n        d = \"most abundant isotope\";\n        e = \"none of the above\";\n        ans = \"A\";\n\n        return [q, a, b, c, d, e, ans]\n    }\n    \n}","import React from 'react';\nimport {Route, BrowserRouter, Switch, Link} from \"react-router-dom\"\nimport HomeScreen from './HomeScreen'\nimport Chemistry from './Chemistry/Chemistry'\nimport MoleCalc from './Chemistry/MoleCalc/MoleCalc'\nimport Mole from './Chemistry/Mole/Mole'\nimport Stoichiometry from './Chemistry/Stoichiometry/Stoichiometry'\nimport Solution_chemistry from './Chemistry/Solution_chemistry/Solution_chemistry';\nimport Atomic from './Chemistry/Atomic/Atomic'\nimport './App.css'\n\nfunction App() {\n  return(\n        <div>\n            <BrowserRouter>\n                <h3 className=\"main_title\"><Link to={\"/home\"} id=\"title\"> Practice Problem </Link></h3>\n                <Switch>\n                    <Route exact path={\"/\"} component={HomeScreen} />\n                    <Route path={\"/home\"} component={HomeScreen} />\n                    <Route path={\"/Chemistry\"} component={Chemistry} />\n                    <Route path={\"/MoleCalc\"} component={MoleCalc} />\n                    <Route path={\"/Mole\"} component={Mole} />\n                    <Route path={\"/Stoichiometry\"} component={Stoichiometry} />\n                    <Route path={\"/Solution_chemistry\"} component={Solution_chemistry} />\n                    <Route path={\"/Atomic\"} component={Atomic} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}