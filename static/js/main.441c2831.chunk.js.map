{"version":3,"sources":["HomeScreen.js","Chemistry/Chemistry.js","Chemistry/MoleCalc/Question_Bank.js","Chemistry/MoleCalc/MoleCalc.js","Chemistry/Mole/Question_Bank.js","Chemistry/Mole/Mole.js","Chemistry/Stoichiometry/Question_Bank.js","Chemistry/Stoichiometry/Stoichiometry.js","Chemistry/Solution_chemistry/Question_Bank.js","Chemistry/Solution_chemistry/Solution_chemistry.js","App.js","index.js"],"names":["HomeScreen","className","to","id","React","Component","Chemistry","Chemical_table","formula","mass","getRandomInt","min","max","Math","floor","random","getRandomChem","chem","length","MoleCalc","props","state","answer_key","answer","question","index","status","create","handleChange","bind","createQuestion","handleClick","check","event","preventDefault","name","target","this","q","alert","setState","prevState","parseFloat","toFixed","value","submit","quest","rand","m","Questions","type","onChange","placeholder","onClick","first_ele","first_ele_mass","first_ele_portion","second_ele","second_ele_mass","second_ele_portion","third_ele","third_ele_mass","third_ele_portion","Mole","first_ele_percent","second_ele_percent","third_ele_percent","x_first_ele_mass","x_second_ele_mass","y_first_ele_mass","y_second_ele_mass","rand1","rand2","i","Stoichiometry","product","ans","hcl_mass","na2co3_mass","mole_h","mole_n","toString","Solution_chemistry","volume","initial_molar","final_molar","molar","ion","first_volume","second_volume","first_molar","second_molar","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.441c2831.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nclass HomeScreen extends React.Component{\n\n\n\n    render() {\n        return (\n            <div className=\"home_screen\">\n                <div className=\"subjects\">\n                    <button><Link to={\"/Chemistry\"} id=\"Chemistry\"> Chemistry Practice Problem </Link></button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default HomeScreen;","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport \"./Chemistry.css\"\n\nclass Chemistry extends React.Component{\n\n    render() {\n        return (\n            <div className=\"chemistry_home_screen\">\n                <div className=\"chapter\">\n                    <h4><Link to={'/MoleCalc'} id=\"moleCalc\"> Mole Calculations </Link></h4>\n                </div>\n                <div className=\"chapter\">\n                    <h4><Link to={'/Mole'} id=\"mole\"> Mole </Link></h4>\n                </div>\n                <div className=\"chapter\">\n                    <h4><Link to={'/Stoichiometry'} id=\"Stoichiometry\"> Stoichiometry </Link></h4>\n                </div>\n                <div className=\"chapter\">\n                    <h4><Link to={'/Solution_chemistry'} id=\"Solution_chemistry\"> Solution Chemistry </Link></h4>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Chemistry","const num_of_q = 6\n\nexport const makeQuestion = (index) => {\n    if (index%num_of_q === 0){\n        const rand = getRandomInt(20, 120);\n        let chem = getRandomChem()\n        const m = (rand / chem[1]).toFixed(2);\n        const q = `How many moles are in ${rand} grams of ${chem[0]}?`;\n        return [q, m]\n    }\n    else if (index%num_of_q === 1){\n        const rand = (getRandomInt(1, 10000) / 1000).toFixed(3)\n        let chem = getRandomChem()\n        const q = `How many grams are in ${rand} moles of ${chem[0]}?`\n        return [q, (rand * chem[1]).toFixed(2)]\n    }\n    else if (index%num_of_q === 2){\n        const rand = (getRandomInt(1, 1000)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many molecules are in ${rand} moles of ${chem[0]}? (Divide the final answer by 10^23. Example: if the answer is 5.6 * 10^24, enter 56)`\n        return [q, (rand * 6.02).toFixed(2)]\n    }\n    else if (index%num_of_q === 3){\n        const rand = (getRandomInt(1, 100)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many moles are in ${rand} * 10^23 molecules of ${chem[0]}?`\n        return [q, (rand / 6.02).toFixed(2)]\n    }\n    else if (index%num_of_q === 4){\n        const rand = (getRandomInt(1, 1000)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many molecules are in ${rand} grams of ${chem[0]}? (Divide the final answer by 10^23. Example: if the answer is 5.6 * 10^24, enter 56)`\n        return [q, (rand / chem[1] * 6.02).toFixed(2)]\n    }\n    else{\n        const rand = (getRandomInt(1, 100)/10).toFixed(1)\n        let chem = getRandomChem()\n        const q = `How many grams are in ${rand} * 10^23 molecules of ${chem[0]}?`\n        return [q, (rand / 6.02 * chem[1]).toFixed(2)]\n    }\n}\n\nconst Chemical_table =  [\n    {formula: \"Li2O\", mass: 29.90},\n    {formula: \"NH3\", mass: 17},\n    {formula: \"Oxygen\", mass: 32},\n    {formula: \"water\", mass: 18},\n    {formula: \"N2I6\", mass: 789.4},\n    {formula: \"H2SO4\", mass: 98.079}\n]\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getRandomChem(){\n    let chem = Chemical_table[ getRandomInt(0, Chemical_table.length - 1) ]\n    let chem_form = chem.formula\n    let chem_mass = chem.mass\n    return [chem_form, chem_mass]\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass MoleCalc extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            const q = \"The answer is \" + this.state.answer_key\n            alert(q)\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\"\n            })\n        }\n    }\n\n    check(){\n        if ((parseFloat(this.state.answer)).toFixed(2) === this.state.answer_key){\n            if (this.state.status !== \"Correct\"){\n                this.setState({status: \"Correct\", create: 0})\n            }\n        }\n        else{\n            if (this.state.status !== \"Incorrect\"){\n                this.setState({status: \"Incorrect\", create: 0})\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%6 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n            </div>\n        )\n    }\n\n}\n\nexport default MoleCalc","const num_of_q = 3\n\nexport const makeQuestion = (index) => {\n    if (index%num_of_q === 0){\n        const rand = (getRandomInt(200, 2000))/1000;\n        let chem = getRandomChem()\n        let first_ele_mass = (rand * chem.first_ele_mass).toFixed(1)\n        let second_ele_mass = (rand * chem.second_ele_mass).toFixed(1)\n        let q\n        if (\"third_ele\" in chem){\n            let third_ele_mass = (rand * chem.third_ele_mass).toFixed(1)\n            q = `This compound has a mass composition of ${first_ele_mass}g of ${chem.first_ele}, ${second_ele_mass}g of ${chem.second_ele} and ${third_ele_mass}g of ${chem.third_ele}. What is the Empirical Formula of this compound? (Remember to captilize first letter of every element)`;\n        }\n        else{\n            q = `This compound has a mass composition of ${first_ele_mass}g of ${chem.first_ele} and ${second_ele_mass}g of ${chem.second_ele}. What is the Empirical Formula of this compound? (Remember to captilize first letter of every element)`;\n        }\n        return [q, chem.formula]\n    }\n    else if (index%num_of_q === 1){\n        let chem = getRandomChem()\n        let first_ele_percent = (((chem.first_ele_mass * chem.first_ele_portion) / chem.mass)*100).toFixed(1)\n        let second_ele_percent = (((chem.second_ele_mass * chem.second_ele_portion) / chem.mass)*100).toFixed(1)\n        let q\n        if (\"third_ele\" in chem){\n            let third_ele_percent = (((chem.third_ele_mass * chem.third_ele_portion) / chem.mass)*100).toFixed(1)\n            q = `A sample has a mass number of ${chem.mass}g. If ${first_ele_percent}% of the sample is ${chem.first_ele}, ${second_ele_percent}% of the sample is ${chem.second_ele} and ${third_ele_percent}% of the sample is ${chem.third_ele}, what is the Empirical Formula? (Remember to captilize first letter of every element)`\n        }\n        else{\n            q = `A sample has a mass number of ${chem.mass}g. If ${first_ele_percent}% of the sample is ${chem.first_ele} and ${second_ele_percent}% of the sample is ${chem.second_ele}, what is the Empirical Formula? (Remember to captilize first letter of every element)`\n        }    \n        return [q, chem.formula]\n    }\n    else{\n        const answer = getRandomInt(0, 1)\n        const rand1 = (getRandomInt(200, 3000))/1000;\n        const rand2 = (getRandomInt(200, 3000))/1000;\n        let x_first_ele_mass, x_second_ele_mass, y_first_ele_mass, y_second_ele_mass\n        if (answer === 0){\n            x_first_ele_mass = (rand1 * Chemical_table[0].first_ele_mass).toFixed(1)\n            x_second_ele_mass = (rand1 * Chemical_table[0].second_ele_mass).toFixed(1)\n            y_first_ele_mass = (rand2 * Chemical_table[1].first_ele_mass).toFixed(1)\n            y_second_ele_mass = (rand2 * Chemical_table[1].second_ele_mass).toFixed(1)\n        }\n        else{\n            let i = getRandomInt(0, 1)\n            x_first_ele_mass = (rand1 * Chemical_table[i].first_ele_mass).toFixed(1)\n            x_second_ele_mass = (rand1 * Chemical_table[i].second_ele_mass).toFixed(1)\n            y_first_ele_mass = (rand2 * Chemical_table[i].first_ele_mass).toFixed(1)\n            y_second_ele_mass = (rand2 * Chemical_table[i].second_ele_mass).toFixed(1)\n        }\n        const q = `A compound X has a mass composition of ${x_first_ele_mass}g Manganese and ${x_second_ele_mass}g of oxygen. A compound Y has a mass composition of ${y_first_ele_mass}g of manganese and ${y_second_ele_mass}g of oxygen. Are they the same compound? (Answer \"Yes\" for same compound, \"No\" for different compound)`\n        return [q, answer === 0? \"No\" : \"Yes\"]\n    }\n}\n\nconst Chemical_table =  [\n    {formula: \"Mn3O4\", mass: 230.8, first_ele: \"Manganese\", first_ele_mass: 54.9, first_ele_portion: 3, second_ele: \"Oxygen\", second_ele_mass: 16, second_ele_portion: 4},\n    {formula: \"Mn4O7\", mass: 331.7, first_ele: \"Manganese\", first_ele_mass: 54.9, first_ele_portion: 4, second_ele: \"Oxygen\", second_ele_mass: 16, second_ele_portion: 7},\n    {formula: \"Li2O\", mass: 29.9, first_ele: \"Lithium\", first_ele_mass: 6.94, first_ele_portion: 2, second_ele: \"Oxygen\", second_ele_mass: 16, second_ele_portion: 1},\n    {formula: \"NH3\", mass: 17.0, first_ele: \"Nitrogen\", first_ele_mass: 14, first_ele_portion: 1, second_ele: \"Hydrogen\", second_ele_mass: 1, second_ele_portion: 3},\n    {formula: \"K2CO3\", mass: 138.2, first_ele: \"Potassium\", first_ele_mass: 39, first_ele_portion: 2, second_ele: \"Carbon\", second_ele_mass: 12, second_ele_portion: 1, third_ele: \"Oxygen\", third_ele_mass: 16, third_ele_portion: 3},\n]\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getRandomChem(){\n    return Chemical_table[ getRandomInt(0, Chemical_table.length - 1) ]\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass Mole extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            const q = \"The answer is \" + this.state.answer_key\n            alert(q)\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\"\n            })\n        }\n    }\n\n    check(){\n        if (this.state.answer === this.state.answer_key){\n            if (this.state.status !== \"Correct\"){\n                this.setState({status: \"Correct\", create: 0})\n            }\n        }\n        else{\n            if (this.state.status !== \"Incorrect\"){\n                this.setState({status: \"Incorrect\", create: 0})\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%3 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n            </div>\n        )\n    }\n\n}\n\nexport default Mole","const num_of_q = 2\n\nexport const makeQuestion = (index) => {\n    if (index%num_of_q === 0){\n        let mass = (getRandomInt(5000, 20000))/100;\n        let product = (getRandomInt(0, 1) === 0? \"Cl2\" : \"KOH\")\n        let ans = ((mass / (product === \"KOH\"? 56.1 * 6 : 35.45 * 3)) / 122.6).toFixed(4)\n        let q = `For the following balanced equation: KClO3 + 5 KCl + 3 H2O -> 3 Cl2 + 6 KOH, if there is ${mass}g of ${product} formed in this chemical reaction, how much KClO3 (in grams) was consumed assuming 100% production rate?`;\n        return [q, ans]\n    }\n    else{\n        const hcl_mass = (getRandomInt(200, 500))/100;\n        const na2co3_mass = (getRandomInt(200, 500))/100;\n        let mole_h = (hcl_mass / 36.5 / 2)\n        let mole_n = (na2co3_mass / 106)\n        let ans\n        if (mole_h > mole_n){\n            ans = \"HCL, \" + (((mole_h - mole_n) * 36.5).toFixed(3)).toString()\n        }\n        else{\n            ans = \"Na2CO3, \" + (((mole_n - mole_h) * 106).toFixed(3)).toString()\n        }\n        const q = `For the following equation: 2 HCl + Na2CO3 -> 2 NaCl + CO2 + H2O, if ${hcl_mass}g of HCl is reacted with ${na2co3_mass}g of Na2CO3, which reactant will be in excess and how much will be left unreacted (if you think Na2CO3 is 3.5g in excess, answer: Na2CO3, 3.5)?`\n        return [q, ans]\n    }\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass Stoichiometry extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            const q = \"The answer is \" + this.state.answer_key\n            alert(q)\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\"\n            })\n        }\n    }\n\n    check(){\n        if (this.state.index%2 === 1){\n            if (this.state.answer === this.state.answer_key){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n        else{\n            if ((parseFloat(this.state.answer)).toFixed(4) === this.state.answer_key){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%2 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n            </div>\n        )\n    }\n\n}\n\nexport default Stoichiometry","const num_of_q = 3\n\nexport const makeQuestion = (index) => {\n    if (index%num_of_q === 0){\n        let chem = getRandomChem()\n        let volume = getRandomInt(15, 50) * 10\n        let initial_molar = getRandomInt(4, 8).toFixed(2)\n        let final_molar = (getRandomInt(10, 30)/10).toFixed(2)\n        let q = `What volume (ml) of water needs to be added to ${volume} mL of ${initial_molar} M ${chem.formula} in order to bring the concentration down to ${final_molar} M?`;\n        return [q, ((initial_molar*volume/final_molar)-volume).toFixed(1)]\n    }\n    else if (index%num_of_q === 1){\n        let chem = getRandomChem()\n        let volume = (getRandomInt(10, 20)*100).toFixed(1)\n        let molar = (getRandomInt(4, 10)/10).toFixed(3)\n        const q = `Calculate the mass (g) of ${chem.formula} needed to make ${volume} mL of a ${molar} M solution of ${chem.formula}.`\n        return [q, (volume / 1000 * molar * chem.mass).toFixed(1)]\n    }\n    else{\n        let rand = getRandomInt(0, 2)\n        var first_volume = (0.05 * (getRandomInt(4, 10)))\n        let second_volume = (0.05 * (getRandomInt(4, 10)))\n        let first_molar = (0.05 * (getRandomInt(4, 10)))\n        let second_molar = (0.05 * (getRandomInt(4, 10)))\n\n        let ion\n        let ans = 0\n        if (rand === 0){\n            ion = \"Cl\"\n            ans = ((first_volume * first_molar / (first_volume + second_volume)) + 2 * (second_volume * second_molar / (first_volume + second_volume))).toFixed(2)\n        }\n        else if (rand === 1){\n            ion = \"Na\"\n            ans = (first_volume * first_molar / (first_volume + second_volume)).toFixed(2)\n        }\n        else{\n            ion = \"Ca\"\n            ans = (second_volume * second_molar / (first_volume + second_volume)).toFixed(2)\n        }\n\n        const q = `What is the concentration of [${ion}] in the mixture of ${first_volume.toFixed(2)}L of ${first_molar.toFixed(2)}M NaCl and ${second_volume.toFixed(2)}L of ${second_molar.toFixed(2)}M CaCl2? Dissociation equation for NaCl: NaCl -> Na + Cl,\n        Dissociation equation for CaCl2: CaCl2 -> Ca + 2 Cl.`\n        return [q, ans]\n    }\n}\n\nconst Chemical_table =  [\n    {formula: \"H2SO4\", mass: 98.08},\n    {formula: \"K2SO3\", mass: 158.2},\n    {formula: \"NaCl\", mass: 58.44},\n    {formula: \"CaCl2\", mass: 110.98},\n]\n\nfunction getRandomChem(){\n    return Chemical_table[ getRandomInt(0, Chemical_table.length - 1) ]\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","import React from 'react'\nimport * as Questions from './Question_Bank'\n\nclass Solution_chemistry extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer_key: \"\",\n            answer: \"\",\n            question: \"\",\n            index: 0,\n            status: \"\",\n            create: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.createQuestion = this.createQuestion.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    handleClick(event){\n        event.preventDefault()\n        const name = event.target.className;\n        if (name === \"submit\"){\n            this.check()\n        }\n        else if (name === \"show_answer\"){\n            const q = \"The answer is \" + this.state.answer_key\n            alert(q)\n        }\n        else if (name === \"next\"){\n            this.setState(prevState =>  {\n                return {\n                    index: prevState.index + 1,\n                    status: \"\",\n                    create: 1,\n                    answer: \"\"\n                }\n            })\n        }\n        else{\n            this.setState({\n                status: \"\",\n                create: 1,\n                answer: \"\"\n            })\n        }\n    }\n\n    check(){\n        if (this.state.index%3 === 0 || this.state.index%3 === 1){\n            if ((parseFloat(this.state.answer)).toFixed(1) === this.state.answer_key){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n        else {\n            if ((parseFloat(this.state.answer)).toFixed(2) === this.state.answer_key){\n                if (this.state.status !== \"Correct\"){\n                    this.setState({status: \"Correct\", create: 0})\n                }\n            }\n            else{\n                if (this.state.status !== \"Incorrect\"){\n                    this.setState({status: \"Incorrect\", create: 0})\n                }\n            }\n        }\n    }\n\n    handleChange(event){\n        const value = event.target.value\n        this.setState({\n            answer: value,\n            submit: 0\n        })\n    }\n\n    createQuestion(){\n        if (this.state.create === 1){\n            const quest = Questions.makeQuestion(this.state.index)\n\n            if (this.state.answer_key !== quest[1]){\n                this.setState({\n                    answer_key : quest[1],\n                    question: quest[0],\n                    create: 0\n                })\n            }\n            else{\n                this.setState({create: 0})\n            }\n        }\n    }\n\n    render() {\n        this.createQuestion();\n        return (\n            <div className=\"Question\">\n\n                <h3>Question number: {this.state.index%3 + 1}</h3>\n\n                <div>\n                    {this.state.question}\n                </div>\n\n                <br />\n\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"ANSWER\" value={this.state.answer} />\n\n                <br /> <br />\n                \n                <button className=\"submit\" onClick={this.handleClick}>Submit</button>\n                <button className=\"next\" onClick={this.handleClick}>Next Question</button>\n                <button className=\"refresh\" onClick={this.handleClick}>Try With Different Values</button>\n                <button className=\"show_answer\" onClick={this.handleClick}>Show Answer</button>\n                <br />\n                <br />\n\n                <h3>{this.state.status}</h3>\n            </div>\n        )\n    }\n\n}\n\nexport default Solution_chemistry","import React from 'react';\nimport {Route, BrowserRouter, Switch, Link} from \"react-router-dom\"\nimport HomeScreen from './HomeScreen'\nimport Chemistry from './Chemistry/Chemistry'\nimport MoleCalc from './Chemistry/MoleCalc/MoleCalc'\nimport Mole from './Chemistry/Mole/Mole'\nimport Stoichiometry from './Chemistry/Stoichiometry/Stoichiometry'\nimport Solution_chemistry from './Chemistry/Solution_chemistry/Solution_chemistry';\n\nfunction App() {\n  return(\n        <div>\n            <BrowserRouter>\n                <h3><Link to={\"/home\"} id=\"title\"> Practice Problem </Link></h3>\n                <Switch>\n                    <Route exact path={\"/PracticeProblems/\"} component={HomeScreen} />\n                    <Route path={\"/home\"} component={HomeScreen} />\n                    <Route path={\"/Chemistry\"} component={Chemistry} />\n                    <Route path={\"/MoleCalc\"} component={MoleCalc} />\n                    <Route path={\"/Mole\"} component={Mole} />\n                    <Route path={\"/Stoichiometry\"} component={Stoichiometry} />\n                    <Route path={\"/Solution_chemistry\"} component={Solution_chemistry} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}